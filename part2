import cv2 as cv
import numpy as np
cap = cv.VideoCapture(0)
#cv.namedWindow("Video")

#capture each frame
_, frame = cap.read()

#turn image to gray
gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY)

#get grayscale with dimensions
weight, height, channel = frame.shape

#get 3 channel image 32float

#float32
flooo = np.zeros((weight,height,3), np.float32)
second = frame.copy()


while True:
    
    status, img = cap.read()

    # functinos for image
    #accumulate weight
    cv.accumulateWeighted(img, flooo, 0.320)

    #convert from 32 to 8
    cv.convertScaleAbs(flooo, second, 1.0, 0.0)

    #get difference
    difference = cv.absdiff(img, second)

    #convert to gray
    grayPic = cv.cvtColor(difference, cv.COLOR_BGR2GRAY)

    #threshold 10
    cv.threshold(grayPic, 10, 255,cv.THRESH_BINARY)


    #blur image
    cv.GaussianBlur(grayPic,(5,5),0)

    #threshold 50
    cv.threshold(grayPic, 160, 255,cv.THRESH_BINARY)

    #contours
    cont,_ = cv.findContours(grayPic, cv.RETR_TREE, cv.CHAIN_APPROX_SIMPLE)

    #loop
    x,y,w,h = cv.boundingRect(grayPic)
    
    for i in cont:
        if cv.contourArea(i) > 500:
            cv.rectangle(img,(x,y),(x+w ,y+h), (0, 255,0 ), 3)
            cv.drawContours(img,i,1,(0,255,0),3)
    cv.imshow("ghost",grayPic)
    cv.imshow("video",img)
    #cv.imshow("grayPic",grayPic)
    
    k = cv.waitKey(5) & 0xFF
    if k == 27:
        break
cv.destroyAllWindows()
